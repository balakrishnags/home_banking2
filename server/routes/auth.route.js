const express = require("express")
const router = express.Router()

const { fieldvalidation } = require("../Middleware/validation/fieldValidation")
const { AUTHFIELDS } = require("../utils/constants/apiFields")
const { verifyToken } = require("../Middleware/tokenvalidation")
const { CONTROLLERS } = require("../controllers/controller.index")
const { UTILS } = require("../utils/util.index")
const { VALIDATION } = require("../Middleware/validation.index")


// signup router
router.post(
    UTILS.CONSTANTS.API_END_POINTS.AUTH.SIGNUP,
    VALIDATION.PAYLOAD_VALIDATION.fieldvalidation(UTILS.CONSTANTS.API_PAYLOADS.AUTH_PAYLOAD.SIGNUP),
    VALIDATION.AUTH_VALIDATION.SIGNUP_VALIDATION,
    CONTROLLERS.AUTH_CONTROLLER.signup(CONTROLLERS)
)
// signin router
router.post(
    UTILS.CONSTANTS.API_END_POINTS.AUTH.SIGNIN,
    fieldvalidation(AUTHFIELDS.SIGNIN),
    CONTROLLERS.AUTH_CONTROLLER.signin
)

// forget password 
router.post(UTILS.CONSTANTS.API_END_POINTS.AUTH.FORGOT_PASSWORD, fieldvalidation(AUTHFIELDS.FORGETPASS), CONTROLLERS.AUTH_CONTROLLER.forgotpassword(CONTROLLERS))
router.post(UTILS.CONSTANTS.API_END_POINTS.AUTH.RESET_PASSWORD, fieldvalidation(AUTHFIELDS.RESETPASS), CONTROLLERS.AUTH_CONTROLLER.resetpassword)
router.put(UTILS.CONSTANTS.API_END_POINTS.AUTH.CHANGE_PASSWORD, fieldvalidation(AUTHFIELDS.ADMINRESETPASS), verifyToken, CONTROLLERS.AUTH_CONTROLLER.adminChangePassword)
router.get(UTILS.CONSTANTS.API_END_POINTS.AUTH.REFRESH_TOKEN, CONTROLLERS.AUTH_CONTROLLER.refreshtoken)
router.get(UTILS.CONSTANTS.API_END_POINTS.AUTH.USER_LIST, verifyToken, CONTROLLERS.AUTH_CONTROLLER.listUsers)
router.get(UTILS.CONSTANTS.API_END_POINTS.AUTH.USER_DETAILS_BY_ID, verifyToken, CONTROLLERS.AUTH_CONTROLLER.userDetailById)
router.delete(UTILS.CONSTANTS.API_END_POINTS.AUTH.DELETE_USER, verifyToken, CONTROLLERS.AUTH_CONTROLLER.deleteUserById)
router.put(UTILS.CONSTANTS.API_END_POINTS.AUTH.UPDATE_USER, fieldvalidation(AUTHFIELDS.UPDATEUSERDETAILS), verifyToken, CONTROLLERS.AUTH_CONTROLLER.updateDetailById(CONTROLLERS))
router.get(UTILS.CONSTANTS.API_END_POINTS.AUTH.GET_FORGOT_PASSWORD_LIST, verifyToken, CONTROLLERS.AUTH_CONTROLLER.getForgetPassRequests)

router.get(UTILS.CONSTANTS.API_END_POINTS.SSEVENTS.GET_PASSWORD_EVENT, CONTROLLERS.AUTH_CONTROLLER.adminForgetEvent)
router.get(UTILS.CONSTANTS.API_END_POINTS.SSEVENTS.QR_SCAN_EVENT, CONTROLLERS.AUTH_CONTROLLER.updateScannerEvent)
router.get(UTILS.CONSTANTS.API_END_POINTS.SSEVENTS.UPDATE_DETAILS_EVENT, CONTROLLERS.AUTH_CONTROLLER.updateUserEvent)
router.get(UTILS.CONSTANTS.API_END_POINTS.SSEVENTS.UPDATE_PASSWORD_EVENT, CONTROLLERS.AUTH_CONTROLLER.updatePasswordEvent)

/// qr code
router.get(UTILS.CONSTANTS.API_END_POINTS.AUTH.GENERATE_QR, CONTROLLERS.AUTH_CONTROLLER.generateQRCode)
router.post(UTILS.CONSTANTS.API_END_POINTS.AUTH.VERIFY_QR, verifyToken, CONTROLLERS.AUTH_CONTROLLER.verifyQrCode)

module.exports = router